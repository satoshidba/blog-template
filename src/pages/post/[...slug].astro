---
import { type CollectionEntry, getCollection } from 'astro:content'
import BlogPost from '@/layouts/BlogPost'
import Code from '@/components/mdx/Code'
import ListRelatedPosts from '@/components/ListRelatedPosts'
import TableOfContents from '@/components/TableOfContents'
import { getPosts } from '@/utils'
import SButton from '@/components/mdx/SButton'

const posts = await getCollection('blog')
export async function getStaticPaths() {
	const posts = await getPosts()

	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post
	}))
}
type Props = CollectionEntry<'blog'>

const post = Astro.props
const MAX_POSTS = 3
const getRelatedPosts = (post: Props) => {
	const lowercaseTags = post.data.tags.map((tag) => tag.toLowerCase())
	const relatedPosts = posts.filter(
		(p) => p.slug !== post.slug && p.data.tags.some((t) => lowercaseTags.includes(t.toLowerCase()))
	)
	return relatedPosts.slice(0, MAX_POSTS)
}

const relatedPosts = getRelatedPosts(post)

const { Content, headings, remarkPluginFrontmatter } = await post.render()
---

<BlogPost
	id={post.id}
	data={post.data}
	headings={headings}
	readTime={remarkPluginFrontmatter.minutesRead}
>
	<!-- post -->
	<article class='max-w-full w-full'>
		<div class='prose prose-lg md:prose-xl dark:prose-invert mt-12 mb-12 min-w-full'>
			<Content components={{ pre: Code, SButton }} />
		</div>
	</article>

	<script type='module' src='https://esm.sh/gh/loueed/bsky@v1.0.0/comments'></script>
</BlogPost>
